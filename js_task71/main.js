// Вы живете в городе Картезия, где все дороги расположены в идеальной сетке. 
// Вы пришли на прием на десять минут раньше, поэтому решили воспользоваться возможностью и прогуляться. 
// Город предоставляет своим гражданам приложение для построения пешеходов на их телефонах - каждый раз, 
// когда вы нажимаете кнопку, он отправляет вам массив однобуквенных строк, представляющих маршруты ходьбы 
// (например, ['n', 's', 'w', 'е']). Вы всегда проходите только один квартал для каждой буквы (направления), 
// и вы знаете, что вам понадобится одна минута, чтобы пройти один городской квартал, поэтому создайте функцию, 
// которая вернет true, если прогулка, которую дает вам приложение, займет у вас ровно десять минут 
// (вы не хочу приходить рано или поздно!) и, конечно же, вернет вас в исходную точку. В противном случае верните false. 
// ['n','s','n','s','n','s','n','s','n','s'] => 'should return true'
// ['w','e','w','e','w','e','w','e','w','e','w','e'] => 'should return false'
// ['w'] => 'should return false'
// ['n','n','n','s','n','s','n','s','n','s'] => 'should return false'
function isValidWalk(arr) {
    n = arr.filter(item => item === 'n')
    s =  arr.filter(item => item === 's')
    e =  arr.filter(item => item === 'e')
    w =  arr.filter(item => item === 'w')
    return arr.length == 10 && n.length == s.length && e.length == w.length
    }
    console.log(isValidWalk(['n','s','n','s','n','s','n','s','n','s']));